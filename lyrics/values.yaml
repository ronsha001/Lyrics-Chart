lyrics:
  namespace: lyrics
  replicas: 2
  port: 8000
  image:
    name: 651569844/lyrics
    tag: 1.2.3
    pullPolicy: Always
  resources:
    requests:
      memory: 250Mi
      cpu: 250m
    limits:
      memory: 500Mi
      cpu: 500m
  nginx:
    enabled: true
    port: 80
    replicas: 2
ingress:
  enabled: true
  host: lyrics
  static_files:
    index_js: |-
      const inputElement = document.querySelector(".searchInp");
      const searchBtn = document.querySelector(".searchBtn");
      const textarea = document.querySelector(".textarea");
      const lang = document.getElementById("lang");

      const API_URL = "http://localhost";

      const searchFunction = () => {
        const songName = inputElement.value;
        const songLang = lang.options[lang.selectedIndex].value;
        if (!songName || !songLang) {
          console.log("Please enter a song name");
          return;
        }
        textarea.innerHTML = "";
        getLyrics(songName, songLang);
      };

      searchBtn.addEventListener("click", searchFunction);

      document.addEventListener("keypress", (e) => {
        if (e.key == "Enter") {
          searchFunction();
        }
      });
      const getLyrics = async (songName, songLang) => {
        const args = "song=" + songName + "&lang=" + songLang;
        fetch(API_URL + "/lyrics?" + args, {
          method: "GET",
        })
          .then((response) => response.text())
          .then((data) => {
            textarea.innerHTML = data;
            console.log("Fetched " + API_URL + "/lyrics?" + args);
          })
          .catch((error) => {
            console.error(error);
            fetch("http://192.168.49.2:30000/lyrics?" + args, {
              method: "GET",
            })
              .then((response) => response.text())
              .then((data) => {
                textarea.innerHTML = data;
                console.log("Fetched http://192.168.49.2:30000/lyrics?" + args);
              })
              .catch((error) => console.error(error));
          });
      };
    main_css: |-
      body {
        padding: 0;
        margin: 0;
      }

      .mainContainer {
        box-sizing: border-box;
        width: 100vw;
        height: 100vh;
        background-color: rgb(43, 54, 54);
        border: 2px solid #455;
        padding: 20px 25px;
        display: flex;
        flex-direction: column;
        align-items: center;
      }
      .mainContainer h1 {
        font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
        color: #e2e2e2;
      }
      .lang_container {
        display: flex;
        flex-direction: row;
        gap: 10px;
        margin-bottom: 10px;
        color: #e2e2e2;
        font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
        font-size: 14px;
        font-weight: bold;
      }
      .searchContainer {
        box-sizing: border-box;
        background-color: #fff;
        width: 900px;
        height: 60px;
        border-radius: 30px;
        border: 1px solid 1px solid rgba(60, 60, 60, 0.626);
        overflow: hidden;
        display: flex;
        flex-direction: row;
      }
      .searchInpContainer {
        width: 90%;
        display: flex;
        flex-direction: row;
        align-items: center;
      }
      .searchInp {
        padding: 0 20px;
        font-size: 25px;
        border: none;
        outline: none;
        width: 100%;
      }
      .searchBtnContainer {
        border-left: 1px solid rgba(60, 60, 60, 0.626);
        overflow: hidden;
        display: flex;
        width: 10%;
        height: 100%;
        flex-direction: column;
        justify-content: center;
        align-items: center;
      }
      .searchBtn {
        font-size: 30px;
        width: 100%;
        height: 100%;
        color: #455;
        background: none;
        border: none;
        cursor: pointer;
        opacity: 0.7;
        transition: 0.3s;
      }
      .searchBtn:hover {
        opacity: 1;
      }

      .lyricsContainer {
        background-color: #fff;
        margin-top: 25px;
        width: 1px solid rgba(60, 60, 60, 0.626);
        min-width: fit-content;
        min-height: fit-content;
        border-radius: 15px;
        overflow: hidden;
      }
      .textarea {
        padding: 20px;
        border-radius: 30px;
        min-width: 500px;
        min-height: 500px;
        box-sizing: border-box;
        border: none;
      }

      .textarea::-webkit-scrollbar {
        width: 8px;
      }

      /* Track */
      .textarea::-webkit-scrollbar-track {
        border-radius: 10px;
        background: #ffffff;
      }

      /* Handle */
      .textarea::-webkit-scrollbar-thumb {
        border-radius: 10px;
        background: #888;
      }

      /* Handle on hover */
      .textarea::-webkit-scrollbar-thumb:hover {
        background: #555;
      }
    index_html: |-
      <!DOCTYPE html>
      <html lang="en">
      <head>
        <meta charset="UTF-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <link rel="stylesheet" href="main.css" >
        <script src="https://kit.fontawesome.com/ca3d7aca66.js" crossorigin="anonymous"></script>
        <title>Lyrics</title>
      </head>
      <body>
        <div class="mainContainer">
          <h1>Search Lyrics</h1>
          <div class="lang_container">
            <label for="lang">Choose language:</label>
            <select id="lang" name="lang">
              <option value="en">English</option>
              <option value="he">Hebrew</option>
            </select>
          </div>
          <div class="searchContainer">
            <div class="searchInpContainer">
              <input class="searchInp" type="text" placeholder="e.g. Hello / Adele Hello (Artist/Song name)">
            </div>
            <div class="searchBtnContainer">
              <button class="searchBtn"><i class="fa-solid fa-magnifying-glass"></i></button>
            </div>
          </div>

          <div class="lyricsContainer">
            <textarea disabled class="textarea">Lyrics</textarea>
          </div>
        </div>

        <script src="index.js"></script>
      </body>
      </html>
ingress-nginx:
  controller:
    service:
      nodePorts:
        http: 30003
        https: 30004
redis:
  master:
    persistence:
      size: 1Gi
  replica:
    persistence:
      size: 1Gi
